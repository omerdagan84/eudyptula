From 7618488f8e5b737b708316079e36d6621560f820 Mon Sep 17 00:00:00 2001
From: Omer Dagan <omer.dagan@tandemg.com>
Date: Wed, 14 Dec 2016 18:18:30 +0200
Subject: [PATCH 3/4] task17

---
 task17/task17.c | 24 +++++++++++++-----------
 1 file changed, 13 insertions(+), 11 deletions(-)

diff --git a/task17/task17.c b/task17/task17.c
index f2a0307..3de1702 100644
--- a/task17/task17.c
+++ b/task17/task17.c
@@ -65,24 +65,26 @@ static int __init task17_init(void)
 {
 	int ret;
 
+	/* Initialize the wait queue */
 	init_waitqueue_head(&task_ctx.wee_wait);
-	task_ctx.f_wait = 0;
 
-	ret = misc_register(&kerneltask_dev);
-	if (ret) {
-		pr_debug("Unable to register kerneltask misc device\n");
-		return ret;	
-	} else {
-		pr_debug("Registered kerneltask misc device\n");
-	}
-	
-	task_ctx.task_thread = kthread_create(run_thread, NULL, "kerneltask");
+	/* Setup the thread */
+	task_ctx.f_wait = 0; //condition for wait on queue
+	task_ctx.task_thread = kthread_create(run_thread, NULL, "kerneltask"); //thread is stopped
 	if (IS_ERR(task_ctx.task_thread)) {
 		ret = PTR_ERR(task_ctx.task_thread);
 		return ret;
 	}
 	get_task_struct(task_ctx.task_thread);
-	wake_up_process(task_ctx.task_thread);
+	wake_up_process(task_ctx.task_thread); //start the thread - and wait on wait queue
+
+	ret = misc_register(&kerneltask_dev); // register the misc device
+	if (ret) {
+		pr_debug("Unable to register kerneltask misc device\n");
+		return ret;
+	} else {
+		pr_debug("Registered kerneltask misc device\n");
+	}
 
 	return ret;
 }
-- 
2.5.0

